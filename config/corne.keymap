/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 39 40 41 11 23 35>;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q              &kp W         &kp E            &kp R            &kp T        &kp Y    &kp U             &kp I             &kp O         &kp P                       &kp LEFT_BRACKET
&kp DELETE  &hml LEFT_SHIFT A  &hml LCTRL S  &hml LEFT_ALT D  &hml LEFT_GUI F  &kp G        &kp H    &hmr RIGHT_GUI J  &hmr RIGHT_ALT K  &hmr RCTRL L  &hmr RIGHT_SHIFT SEMICOLON  &kp SQT
&tog 3      &kp Z              &kp X         &kp C            &kp V            &kp B        &kp N    &kp M             &kp COMMA         &kp DOT       &kp NON_US_BACKSLASH        &kp RIGHT_BRACKET
                                             &tog 1           &kp TAB          &kp SPACE    &kp RET  &kp BACKSPACE     &tog 2
            >;
        };

        math {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1    &kp N2     &kp N3        &kp N4     &kp N5                  &kp N6                 &kp N7     &kp N8     &kp N9     &kp N0     &none
&trans  &trans    &trans     &trans        &trans     &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &trans     &trans     &trans     &trans     &kp CAPSLOCK
&trans  &kp PLUS  &kp MINUS  &kp ASTERISK  &kp SLASH  &kp EQUAL               &kp DOT                &kp COMMA  &kp CARET  &kp TILDE  &kp GRAVE  &none
                             &trans        &trans     &trans                  &trans                 &trans     &trans
            >;
        };

        symbols {
            bindings = <
&trans  &kp AT_SIGN  &kp HASH       &kp NON_US_BACKSLASH  &kp LEFT_BRACE   &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &kp RIGHT_BRACE  &kp SLASH     &kp SEMICOLON  &kp SQT            &none
&trans  &trans       &trans         &trans                &trans           &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &trans           &trans        &trans         &trans             &kp CAPSLOCK
&trans  &kp DOLLAR   &kp AMPERSAND  &kp PIPE              &kp EXCLAMATION  &kp LESS_THAN           &kp GREATER_THAN       &kp UNDERSCORE   &kp QUESTION  &kp COLON      &kp DOUBLE_QUOTES  &none
                                    &trans                &trans           &trans                  &trans                 &trans           &trans
            >;
        };

        system {
            bindings = <
&kp F1  &kp F2          &kp F3        &kp F4        &kp F5             &kp F6             &kp F7          &kp F8          &kp F9        &kp F10     &kp F11     &kp F12
&none   &kp C_PREVIOUS  &kp C_NEXT    &kp C_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT   &bl BL_DEC  &bl BL_INC
&trans  &bt BT_SEL 4    &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1       &bt BT_SEL 0       &bt BT_CLR      &bt BT_CLR_ALL  &bt BT_PRV    &bt BT_NXT  &none       &bl BL_TOG
                                      &trans        &trans             &trans             &trans          &trans          &trans
            >;
        };
    };
};
